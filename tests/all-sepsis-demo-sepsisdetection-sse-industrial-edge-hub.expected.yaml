---
# Source: sepsisdetection-sse/templates/sepsisdetection-sse-dependencies.yaml
kind: List
apiVersion: v1
namespace: sepsis-demo 
items:
    - apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: "sepsisdetection-sse"
        namespace: "sepsis-demo"

    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: "sepsisdetection-sse-admin"
        namespace: "sepsis-demo"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: admin
      subjects:
      - kind: ServiceAccount
        name: "sepsisdetection-sse-admin"
        namespace: "sepsis-demo"

    - apiVersion: v1
      kind: ConfigMap
      metadata:
        name: "sepsisdetection-sse"
      data:
        application.properties: |-
                  #  Not included in binary linux image.
                  #  These properties over-ride those in src/main/resourcs.
                  #  Used locally when executing:
                  #    1)  local java (ie: java -jar target/datawarehouse-0.0.11-runner.jar)
                  #    2)  quarkus tests
                  
                  #  Reference:   https://quarkus.io/guides/config#overriding-properties-at-runtime
                  
                  
                  quarkus.log.console.enable=true
                  quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
                  quarkus.log.console.level=INFO
                  quarkus.log.console.color=false
                  
                  quarkus.http.port=8080
                  
                  
                  ######    messaging     #######
                  kafka.bootstrap.servers=kafka-cluster-kafka-bootstrap.sepsis-demo.svc.cluster.local:9092
                  ###############################
            

    - apiVersion: image.openshift.io/v1
      kind: ImageStream
      metadata:
          name: sepsisdetection-sse
          labels:
              app: sepsisdetection-sse
      spec:
          dockerImageRepository: quay.io/redhat_naps_da/sepsisdetection-sse
---
# Source: sepsisdetection-sse/templates/sepsisdetection-sse-services.yaml
kind: List
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: sepsisdetection-sse
      monitoring: prometheus
      expose: "true"
    name: sepsisdetection-sse
  spec:
    ports:
      - name: http
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      group: sepsis 
      app: sepsisdetection-sse
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: sepsisdetection-sse
    name: sepsisdetection-sse
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      group: sepsis
      app: sepsisdetection-sse
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 3600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          group: sepsis
          app: sepsisdetection-sse
      spec:
        containers:
          - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: JAVA_OPTIONS
              value: >
                -Dvertx.metrics.options.enabled=true -Dvertx.metrics.options.registryName=prometheus
            - name: AB_JOLOKIA_OFF
              value: 'true'
            - name: APP_CONFIGMAP_NAME
              value: sepsisdetection-sse
            - name: APP_CONFIGMAP_KEY
              value: application.properties
            imagePullPolicy: IfNotPresent
            name: sepsisdetection-sse
            ports:
              - containerPort: 9779
                name: prometheus
                protocol: TCP
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /q/health/live
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 30
              timeoutSeconds: 3
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /q/health/ready
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 30
              timeoutSeconds: 3
            resources:
              limits:
                cpu: '1500m'
                memory: '1Gi'
              requests:
                cpu: '250m'
                memory: '250Mi'
            securityContext:
              privileged: false
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /deployments/config
              name: config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: sepsisdetection-sse
        serviceAccountName: sepsisdetection-sse
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: application.properties
                path: application.properties
            name: sepsisdetection-sse
          name: config
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - sepsisdetection-sse
          from:
            kind: ImageStreamTag
            name: "sepsisdetection-sse:0.0.3"
        type: ImageChange
---
# Source: sepsisdetection-sse/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: sepsisdetection-sse
  namespace: sepsis-demo
spec:
  host: sepsisdetection-sse-sepsis-demo.apps.hub.example.com
  port:
    targetPort: http
  tls:
    termination: edge
  to:
    kind: Service
    name: sepsisdetection-sse
  wildcardPolicy: None
---
# Source: sepsisdetection-sse/templates/add-scc-anyuid-sa.yaml
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  annotations:
    include.release.openshift.io/ibm-cloud-managed: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    kubernetes.io/description: anyuid provides all features of the restricted SCC
      but allows users to run with any UID and any GID.
    release.openshift.io/create-only: "true"
  creationTimestamp: "2023-01-04T15:19:42Z"
  generation: 2
  name: anyuid
priority: 10
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups:
- system:cluster-admins
readOnlyRootFilesystem: false
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: true
allowPrivilegedContainer: false
allowedCapabilities: null
requiredDropCapabilities:
- MKNOD
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
users:
    - system:serviceaccount:sepsis-demo:sepsisdetection-risk
    - system:serviceaccount:sepsis-demo:sepsisdetection-rhpam
    - system:serviceaccount:sepsis-demo:sepsisdetection-sse   
volumes:
- configMap
- downwardAPI
- emptyDir
- persistentVolumeClaim
- projected
- secret
